/* 


*/
Select * 
From [dbo].[Nashville Housing Data for Data Cleaning]

/*  Standardize Date Format */

Select SaleDate, CONVERT(date, SaleDate)
From [dbo].[Nashville Housing Data for Data Cleaning]

Update [dbo].[Nashville Housing Data for Data Cleaning]
SET SaleDate= CONVERT(date, Saledate)

Select SaleDate
From [dbo].[Nashville Housing Data for Data Cleaning]

/* Populate Property Address data, fixing same parcel IDs with the same address*/ 

Select *
From [dbo].[Nashville Housing Data for Data Cleaning]
-- where PropertyAddress is null
order by ParcelID 

Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress) 
From dbo.[Nashville Housing Data for Data Cleaning] a 
JOIN dbo.[Nashville Housing Data for Data Cleaning] b 
    on a.ParcelID = b.ParcelID
    AND a.[UniqueID] <> b.[UniqueID]  
where a.PropertyAddress is null 

Update a  
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress) 
From dbo.[Nashville Housing Data for Data Cleaning] a 
JOIN dbo.[Nashville Housing Data for Data Cleaning] b 
    on a.ParcelID = b.ParcelID
    AND a.[UniqueID] <> b.[UniqueID]  
where a.PropertyAddress is null 

-- Taking care of null property addresses. ISNULL checks to see if something is null where we can replace it. 

-- Breaking out Address into invidivual columns (address, city, state)

Select PropertyAddress
from dbo.[Nashville Housing Data for Data Cleaning]

SELECT 
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1) as Address,
SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress)) as Address
from dbo.[Nashville Housing Data for Data Cleaning]

ALTER TABLE dbo.[Nashville Housing Data for Data Cleaning]
Add PropertySplitAddress nvarchar(255); 

Update dbo.[Nashville Housing Data for Data Cleaning]
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1) 

ALTER TABLE dbo.[Nashville Housing Data for Data Cleaning]
Add PropertySplitCity nvarchar(255);

Update dbo.[Nashville Housing Data for Data Cleaning]
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress)) 

SELECT * 
FROM Dbo.[Nashville Housing Data for Data Cleaning]

--- Changing Owner Address, Splitting up City and State NOT using Substrings, PARSE NAME 

SELECT OwnerAddress
FROM Dbo.[Nashville Housing Data for Data Cleaning]

Select 
PARSENAME(REPLACE(OwnerAddress, ',', '.'),3),
PARSENAME(REPLACE(OwnerAddress, ',', '.'),2),
PARSENAME(REPLACE(OwnerAddress, ',', '.'),1)
FROM Dbo.[Nashville Housing Data for Data Cleaning]


ALTER TABLE dbo.[Nashville Housing Data for Data Cleaning]
Add OwnerSplitAddress nvarchar(255); 

Update dbo.[Nashville Housing Data for Data Cleaning]
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.'),3)

ALTER TABLE dbo.[Nashville Housing Data for Data Cleaning]
Add OwnerSplitCity nvarchar(255);

Update dbo.[Nashville Housing Data for Data Cleaning]
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.'),2)

ALTER TABLE dbo.[Nashville Housing Data for Data Cleaning]
Add OwnerSplitState nvarchar(255); 

Update dbo.[Nashville Housing Data for Data Cleaning]
SET  OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.'),1)

SELECT *
FROM Dbo.[Nashville Housing Data for Data Cleaning]

-- Change Y and N to Yes and No in Sold as Vacant Field 

Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From dbo.[Nashville Housing Data for Data Cleaning]
Group by SoldAsVacant
Order By 2


Select SoldAsVacant,
CASE When SoldAsVacant = 'Y' THEN 'Yes'
     When SoldAsVacant ='N' THEN 'No'
     ELSE SoldAsVacant
     END
From dbo.[Nashville Housing Data for Data Cleaning]

Update [Nashville Housing Data for Data Cleaning]
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
     When SoldAsVacant ='N' THEN 'No'
     ELSE SoldAsVacant
     END


-- Removing Duplicates 

WITH RowNumCTE AS(
SELECT * ,
    ROW_NUMBER() OVER (
        PARTITION BY ParcelID,
                     PropertyAddress,
                     SalePrice,
                     SaleDate,
                     LegalReference
                     ORDER BY
                        UniqueId                
    ) row_num
FROM dbo.[Nashville Housing Data for Data Cleaning]
--ORDER BY ParcelID
)
SELECT * 
FROM RowNumCTE 
WHERE row_num > 1 
ORDER BY PropertyAddress

-- Deleting Unused Columns 

Select * 
FROM dbo.[Nashville Housing Data for Data Cleaning]

ALTER TABLE dbo.[Nashville Housing Data for Data Cleaning]
DROP COLUMN OwnerAddress, TaxDistrict,PropertyAddress

ALTER TABLE dbo.[Nashville Housing Data for Data Cleaning]
DROP COLUMN SaleDate 

